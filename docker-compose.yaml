services:
  clickhouse-db:
    image: clickhouse/clickhouse-server:24.12.3
    environment:
      - CLICKHOUSE_DB=clickhousedb
      - CLICKHOUSE_USER=egor
      - CLICKHOUSE_PASSWORD=fusion
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - 8123:8123
      - 9000:9000

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    restart: "no"
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NODE_ID: 1
      CLUSTER_ID: B4Cs0z61TTSuASkdVw_vkA
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:9093
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    restart: "no"
    ports:
      - "8989:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: B4Cs0z61TTSuASkdVw_vkA
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit -1
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 5
    depends_on:
      - kafka


  postgres:
    image: postgres:17.2
    restart: "no"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: egor
      POSTGRES_PASSWORD: fusion
      POSTGRES_DB: analytics-db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
volumes:
  postgres_data:
  kafka_data: